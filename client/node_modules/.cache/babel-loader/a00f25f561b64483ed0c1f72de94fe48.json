{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filtered: null\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Contact/client/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","state","action","type","contacts","payload","filter","contact","id","map","current","filtered","regex","RegExp","name","match","email","error"],"mappings":"AAAA,SACIA,WADJ,EAGIC,cAHJ,EAIIC,WAJJ,EAKIC,aALJ,EAMIC,cANJ,EAOIC,eAPJ,EAQIC,YARJ,EASIC,aATJ,QAUO,UAVP;AAaA,gBAAc,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC1B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,WAAL;AACI,aAAM,EACF,GAAGQ,KADD;AAEFG,QAAAA,QAAQ,EAAC,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAmBF,MAAM,CAACG,OAA1B;AAFP,OAAN;;AAIA,SAAKX,cAAL;AACI,aAAM,EACF,GAAGO,KADD;AAEFG,QAAAA,QAAQ,EAACH,KAAK,CAACG,QAAN,CAAeE,MAAf,CAAsBC,OAAO,IAAEA,OAAO,CAACC,EAAR,KAAaN,MAAM,CAACG,OAAnD;AAFP,OAAN;;AAIA,SAAKR,cAAL;AACI,aAAM,EACF,GAAGI,KADD;AAEFG,QAAAA,QAAQ,EAACH,KAAK,CAACG,QAAN,CAAeK,GAAf,CAAmBF,OAAO,IAAEA,OAAO,CAACC,EAAR,KAAaN,MAAM,CAACG,OAAP,CAAeG,EAA5B,GAA+BN,MAAM,CAACG,OAAtC,GAA8CE,OAA1E;AAFP,OAAN;;AAIJ,SAAKZ,WAAL;AACI,aAAM,EACF,GAAGM,KADD;AAEFS,QAAAA,OAAO,EAACR,MAAM,CAACG;AAFb,OAAN;;AAIA,SAAKT,aAAL;AACI,aAAM,EACF,GAAGK,KADD;AAEFS,QAAAA,OAAO,EAAC;AAFN,OAAN;;AAIA,SAAKZ,eAAL;AACI,aAAM,EACF,GAAGG,KADD;AAEFU,QAAAA,QAAQ,EAACV,KAAK,CAACG,QAAN,CAAeE,MAAf,CAAsBC,OAAO,IAAE;AACpC,gBAAMK,KAAK,GAAC,IAAIC,MAAJ,CAAY,GAAEX,MAAM,CAACG,OAAQ,EAA7B,EAA+B,IAA/B,CAAZ;AACA,iBAAOE,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA8BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAArC;AACH,SAHQ;AAFP,OAAN;;AAOA,SAAKb,YAAL;AACI,aAAM,EACF,GAAGE,KADD;AAEFU,QAAAA,QAAQ,EAAC;AAFP,OAAN;;AAIJ,SAAKX,aAAL;AACI,aAAM,EACF,GAAGC,KADD;AAEFgB,QAAAA,KAAK,EAACf,MAAM,CAACG;AAFX,OAAN;;AAOxB;AACI,aAAOJ,KAAP;AAhDR;AAmDH,CApDD","sourcesContent":["import {\r\n    ADD_CONTACT,\r\n   \r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    CONTACT_ERROR\r\n} from '../types';\r\n\r\n\r\nexport default(state,action)=>{\r\n    switch(action.type){\r\n        case ADD_CONTACT:\r\n            return{\r\n                ...state,\r\n                contacts:[...state.contacts,action.payload]\r\n            };\r\n            case DELETE_CONTACT:\r\n                return{\r\n                    ...state,\r\n                    contacts:state.contacts.filter(contact=>contact.id!==action.payload)\r\n                };\r\n                case UPDATE_CONTACT:\r\n                    return{\r\n                        ...state,\r\n                        contacts:state.contacts.map(contact=>contact.id===action.payload.id?action.payload:contact)\r\n                    };\r\n                case SET_CURRENT:\r\n                    return{\r\n                        ...state,\r\n                        current:action.payload\r\n                    };\r\n                    case CLEAR_CURRENT:\r\n                        return{\r\n                            ...state,\r\n                            current:null\r\n                        };\r\n                        case FILTER_CONTACTS:\r\n                            return{\r\n                                ...state,\r\n                                filtered:state.contacts.filter(contact=>{\r\n                                    const regex=new RegExp(`${action.payload}`,'gi');\r\n                                    return contact.name.match(regex) ||  contact.email.match(regex); \r\n                                })\r\n                            };\r\n                            case CLEAR_FILTER:\r\n                                return{\r\n                                    ...state,\r\n                                    filtered:null\r\n                                };\r\n                            case CONTACT_ERROR:\r\n                                return{\r\n                                    ...state,\r\n                                    error:action.payload\r\n                                };\r\n                        \r\n                    \r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}