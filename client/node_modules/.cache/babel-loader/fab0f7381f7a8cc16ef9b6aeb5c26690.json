{"ast":null,"code":"var _jsxFileName = \"C:\\\\Contact\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext'; //usestate is a hook\n//in this register.js we use jsx format and we use usesate hook the forward the data.\n\nconst Register = props => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext); //getting the register,login function from reducer via context and passing it from register.js to auth.state\n\n  const {\n    setAlert\n  } = alertContext;\n  const {\n    register,\n    error,\n    clearErrors,\n    isAuthenticated\n  } = authContext; //the reason im importing the error is to show that userexist in the ui.\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/'); //if the user is registered he will be authenticated home using the jwt......\n    }\n\n    if (error === 'User already exists') {\n      setAlert(error, 'danger');\n      clearErrors(); //after sometime the error will get cleared...\n    } //eslint-disable-next-line\n\n  }, [error, isAuthenticated, props.history]); // we are passing this object.\n\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = user;\n\n  const onChange = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  }); //whenever we type in the register form it will change it dynamically..\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (name === '' || email === '' || password === '') {\n      setAlert('Please Enter all the fields', 'danger');\n    } else if (password !== password2) {\n      setAlert('Password doesnt match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Account\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 24\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    minLength: \"6\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password2\",\n    value: password2,\n    onChange: onChange,\n    minLength: \"6\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Register\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Register;\n/*when a user is registered it will go to loaduser and get the data from the BE */","map":{"version":3,"sources":["C:/Contact/client/src/components/auth/Register.js"],"names":["React","useState","useContext","useEffect","AlertContext","AuthContext","Register","props","alertContext","authContext","setAlert","register","error","clearErrors","isAuthenticated","history","push","user","setUser","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React,{useState,useContext,useEffect} from 'react';\r\nimport AlertContext from '../../context/alert/alertContext';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\n\r\n\r\n\r\n\r\n//usestate is a hook\r\n//in this register.js we use jsx format and we use usesate hook the forward the data.\r\n\r\nconst Register=(props)=>{\r\n\r\n    const alertContext=useContext(AlertContext);\r\n  \r\n    const authContext=useContext(AuthContext); //getting the register,login function from reducer via context and passing it from register.js to auth.state\r\n  \r\n    const{setAlert}=alertContext;\r\n   \r\n    const{register,error,clearErrors,isAuthenticated}=authContext;  //the reason im importing the error is to show that userexist in the ui.\r\n       \r\n    useEffect(()=>{\r\n\r\n        if(isAuthenticated){\r\n            props.history.push('/'); //if the user is registered he will be authenticated home using the jwt......\r\n        }\r\n        if(error==='User already exists'){\r\n            setAlert(error,'danger');\r\n            clearErrors(); //after sometime the error will get cleared...\r\n        }\r\n     //eslint-disable-next-line\r\n    },[error,isAuthenticated,props.history]);  // we are passing this object.\r\n    \r\n    \r\n    \r\n    const[user,setUser]=useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        password2:''\r\n    });\r\n\r\n    const {name,email,password,password2}=user;\r\n\r\n    const onChange=e=>setUser({...user,[e.target.name]:e.target.value}); //whenever we type in the register form it will change it dynamically..\r\n   \r\n   \r\n    const onSubmit=e=>{\r\n        e.preventDefault();\r\n\r\n        if(name=== ''|| email ===''|| password ===''){\r\n            setAlert('Please Enter all the fields','danger');\r\n\r\n        }else if(password!==password2){\r\n            setAlert('Password doesnt match','danger');\r\n        }\r\n        else{\r\n           register({\r\n               name,\r\n               email,\r\n               password\r\n           });\r\n        }\r\n      \r\n    };\r\n    return(\r\n        <div className=\"form-container\">\r\n            <h1>\r\n                Account<span className='text-primary'>Register</span>\r\n            </h1>\r\n            <form onSubmit={onSubmit}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" name=\"name\" value={name} onChange={onChange} required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <input type=\"email\" name=\"email\" value={email} onChange={onChange} required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" name=\"password\" value={password} onChange={onChange} minLength='6' required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password2\">Confirm Password</label>\r\n                    <input type=\"password\" name=\"password2\" value={password2} onChange={onChange} minLength='6' required/>\r\n                </div>\r\n                <input type=\"submit\" value=\"Register\" className=\"btn btn-primary btn-block\"/>\r\n            </form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Register;\r\n\r\n\r\n\r\n\r\n/*when a user is registered it will go to loaduser and get the data from the BE */"]},"metadata":{},"sourceType":"module"}