{"ast":null,"code":"var _jsxFileName = \"C:\\\\Contact\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from './ContactItem';\nimport ContactContext from '../../context/contact/contactContext'; //The work we are going to do is contacts.js will get the state from contextcomponent then it will give to contextitem.\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filtered,\n    getContacts,\n    loading\n  } = contactContext;\n  useEffect(() => {\n    getContacts(); //eslint-disable-next-line\n  }, []);\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, \"Please add a contact\");\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TransitionGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, filtered !== null ? filtered.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }))) : contacts.map(contact => /*#__PURE__*/React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ContactItem, {\n    contact: contact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["C:/Contact/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","CSSTransition","TransitionGroup","ContactItem","ContactContext","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,UAAvB,EAAkCC,SAAlC,QAAkD,OAAlD;AACA,SAAQC,aAAR,EAAsBC,eAAtB,QAA4C,wBAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,sCAA3B,C,CAEA;;AAGA,MAAMC,QAAQ,GAAC,MAAI;AAIf,QAAMC,cAAc,GAACP,UAAU,CAACK,cAAD,CAA/B;AACA,QAAM;AAACG,IAAAA,QAAD;AAAUC,IAAAA,QAAV;AAAmBC,IAAAA,WAAnB;AAA+BC,IAAAA;AAA/B,MAAyCJ,cAA/C;AAECN,EAAAA,SAAS,CAAC,MAAI;AACVS,IAAAA,WAAW,GADD,CAEV;AACH,GAHQ,EAGP,EAHO,CAAT;;AAID,MAAGF,QAAQ,CAACI,MAAT,KAAkB,CAArB,EAAuB;AAEnB,wBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAN;AACH;;AAGD,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,QAAQ,KAAG,IAAX,GACEA,QAAQ,CAACI,GAAT,CAAaC,OAAO,iBAClB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,OAAO,EAAE,GAA1C;AAA+C,IAAA,UAAU,EAAC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD,oBAAC,WAAD;AAAc,IAAA,OAAO,EAAED,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CADF,CADF,GAMJN,QAAQ,CAACK,GAAT,CAAaC,OAAO,iBACjB,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,OAAO,CAACC,GAA5B;AAAiC,IAAA,OAAO,EAAE,GAA1C;AAA+C,IAAA,UAAU,EAAC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AAAc,IAAA,OAAO,EAAED,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADH,CAPG,CADJ,CADJ;AAkBH,CAnCD;;AAqCA,eAAeR,QAAf","sourcesContent":["import React,{Fragment,useContext,useEffect} from 'react';\r\nimport {CSSTransition,TransitionGroup} from 'react-transition-group';\r\nimport ContactItem from './ContactItem';\r\nimport ContactContext from '../../context/contact/contactContext';\r\n\r\n//The work we are going to do is contacts.js will get the state from contextcomponent then it will give to contextitem.\r\n\r\n\r\nconst Contacts=()=>{\r\n\r\n    \r\n    \r\n    const contactContext=useContext(ContactContext);\r\n    const {contacts,filtered,getContacts,loading} =contactContext;\r\n     \r\n     useEffect(()=>{\r\n         getContacts();\r\n         //eslint-disable-next-line\r\n     },[])\r\n    if(contacts.length===0){\r\n\r\n        return<h4>Please add a contact</h4>\r\n    }\r\n     \r\n\r\n    return(\r\n        <Fragment>\r\n            <TransitionGroup>\r\n            {filtered!==null\r\n             ? filtered.map(contact=>(\r\n                 <CSSTransition key={contact._id} timeout={500} classNames='item'>\r\n                <ContactItem  contact={contact}/>\r\n                </CSSTransition>\r\n             )) :\r\n         contacts.map(contact=>(\r\n            <CSSTransition key={contact._id} timeout={500} classNames='item'>\r\n            <ContactItem  contact={contact} />\r\n            </CSSTransition>\r\n         ))}\r\n         </TransitionGroup>\r\n        </Fragment>\r\n    );\r\n    \r\n};\r\n\r\nexport default Contacts;"]},"metadata":{},"sourceType":"module"}