{"ast":null,"code":"var _jsxFileName = \"C:\\\\Contact\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react'; //userreducer is like a redux which is used to go to previous state or next state.\n//At first we are trying to hardcode using static data so we need a uuid whiich is given by react,. \n\nimport contactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types'; //state where the data from the UI is gahter and working of add deletee ect is dobe.\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  }; //state allows to access inside stat,dispatch the obj to reducer \n\n  const [state, dispatch] = useReducer(contactReducer, initialState); //ADD Contact\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json' //setting the header format\n\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n    } catch (error) {}\n\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  }; //props.children is pass functions from parent to child components, whereas the child components make use of these functions and the functions may change the state in a parent component above.\n\n\n  return /*#__PURE__*/React.createElement(contactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      clearFilter,\n      filterContacts,\n      updateContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["C:/Contact/client/src/context/contact/ContactState.js"],"names":["React","useReducer","contactContext","contactReducer","axios","v4","uuidv4","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","config","headers","res","post","error","type","payload","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React,{useReducer} from 'react';  //userreducer is like a redux which is used to go to previous state or next state.\r\n  //At first we are trying to hardcode using static data so we need a uuid whiich is given by react,. \r\nimport contactContext from  './contactContext';\r\nimport contactReducer from './contactReducer';\r\nimport axios from 'axios';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {\r\n    ADD_CONTACT,\r\n   \r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER\r\n} from '../types';\r\n\r\n//state where the data from the UI is gahter and working of add deletee ect is dobe.\r\n\r\nconst ContactState = props=>{\r\n    const initialState={\r\n        contacts:[ ],\r\n        current:null,\r\n        filtered:null\r\n    };\r\n    //state allows to access inside stat,dispatch the obj to reducer \r\n    const[state,dispatch]=useReducer(contactReducer,initialState);\r\n   \r\n\r\n    //ADD Contact\r\n    const addContact=async contact=>{\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json'  //setting the header format\r\n            }\r\n        }\r\n        try {\r\n            const res=await axios.post('/api/contacts',contact,config);\r\n            \r\n        } catch (error) {\r\n            \r\n        }\r\n        dispatch({type:ADD_CONTACT,payload:contact});\r\n\r\n    };\r\n\r\n    //Delete Contact\r\n    const deleteContact=id=>{\r\n      \r\n        dispatch({type:DELETE_CONTACT,payload:id});\r\n\r\n    };\r\n\r\n    //Set Current Contact\r\n    const setCurrent=contact=>{\r\n        \r\n        dispatch({type:SET_CURRENT,payload:contact});\r\n\r\n    };\r\n\r\n    //Clear Current Contact\r\n    const clearCurrent=()=>{\r\n        dispatch({type:CLEAR_CURRENT});\r\n\r\n    };\r\n\r\n\r\n\r\n    //Update Contact\r\n    const updateContact=contact=>{\r\n        \r\n        dispatch({type:UPDATE_CONTACT,payload:contact});\r\n\r\n    };\r\n\r\n\r\n    //Filter Contacts\r\n\r\n    const filterContacts=text=>{\r\n        \r\n        dispatch({type:FILTER_CONTACTS,payload:text});\r\n\r\n    };\r\n\r\n\r\n\r\n    //Clear Filter\r\n    const clearFilter=()=>{\r\n        dispatch({type:CLEAR_FILTER});\r\n\r\n    };\r\n\r\n\r\n//props.children is pass functions from parent to child components, whereas the child components make use of these functions and the functions may change the state in a parent component above.\r\n    return (\r\n        <contactContext.Provider\r\n         value={{\r\n             contacts:state.contacts,\r\n             current:state.current,\r\n             filtered:state.filtered,\r\n             addContact,\r\n             deleteContact,\r\n             setCurrent,\r\n             clearCurrent,\r\n             clearFilter,\r\n             filterContacts,\r\n             updateContact\r\n         }}>\r\n         {props.children}  \r\n        </contactContext.Provider>\r\n    );\r\n\r\n\r\n};\r\n\r\n\r\n\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}