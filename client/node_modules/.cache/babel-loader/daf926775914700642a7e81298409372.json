{"ast":null,"code":"var _jsxFileName = \"C:\\\\Contact\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext'; //usestate is a hook\n//in this login.js we use jsx format and we use usesate hook the forward the data.\n\nconst Login = props => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n  const {\n    setAlert\n  } = alertContext;\n  const {\n    login,\n    error,\n    clearErrors,\n    isAuthenticated\n  } = authContext;\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/'); //if the user is registered he will be authenticated home using the jwt......\n    }\n\n    if (error === 'Invalid Credentials') {\n      setAlert(error, 'danger');\n      clearErrors(); //after sometime the error will get cleared...\n    } //eslint-disable-next-line\n\n  }, [error, isAuthenticated, props.history]); // we are passing this object.\n\n  const [user, setUser] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = user;\n\n  const onChange = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  }); //whenever we type in the register form it will change it dynamically..\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (email === '' || password === '') {\n      setAlert('Please Enter all the fields', 'danger');\n    } else {\n      login({\n        email,\n        password\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Account\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 24\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Contact/client/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","AlertContext","AuthContext","Login","props","alertContext","authContext","setAlert","login","error","clearErrors","isAuthenticated","history","push","user","setUser","email","password","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,UAAvB,EAAkCC,SAAlC,QAAkD,OAAlD;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,WAAP,MAAwB,gCAAxB,C,CAKA;AACA;;AAEA,MAAMC,KAAK,GAAEC,KAAD,IAAS;AACjB,QAAMC,YAAY,GAACN,UAAU,CAACE,YAAD,CAA7B;AACA,QAAMK,WAAW,GAACP,UAAU,CAACG,WAAD,CAA5B;AAEA,QAAK;AAACK,IAAAA;AAAD,MAAWF,YAAhB;AACA,QAAK;AAACG,IAAAA,KAAD;AAAOC,IAAAA,KAAP;AAAaC,IAAAA,WAAb;AAAyBC,IAAAA;AAAzB,MAA0CL,WAA/C;AAGAN,EAAAA,SAAS,CAAC,MAAI;AAEV,QAAGW,eAAH,EAAmB;AACfP,MAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,GAAnB,EADe,CACU;AAC5B;;AACD,QAAGJ,KAAK,KAAG,qBAAX,EAAiC;AAC7BF,MAAAA,QAAQ,CAACE,KAAD,EAAO,QAAP,CAAR;AACAC,MAAAA,WAAW,GAFkB,CAEd;AAClB,KARS,CASb;;AACA,GAVQ,EAUP,CAACD,KAAD,EAAOE,eAAP,EAAuBP,KAAK,CAACQ,OAA7B,CAVO,CAAT,CARiB,CAkB0B;;AAE3C,QAAK,CAACE,IAAD,EAAMC,OAAN,IAAejB,QAAQ,CAAC;AAEzBkB,IAAAA,KAAK,EAAC,EAFmB;AAGzBC,IAAAA,QAAQ,EAAC;AAHgB,GAAD,CAA5B;AAMA,QAAM;AAACD,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAiBH,IAAvB;;AAEA,QAAMI,QAAQ,GAACC,CAAC,IAAEJ,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAS,KAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAgBF,CAAC,CAACC,MAAF,CAASE;AAAlC,GAAD,CAAzB,CA5BiB,CA4BoD;;;AAGrE,QAAMC,QAAQ,GAACJ,CAAC,IAAE;AACdA,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAGR,KAAK,KAAI,EAAT,IAAcC,QAAQ,KAAI,EAA7B,EAAgC;AAC5BV,MAAAA,QAAQ,CAAC,6BAAD,EAA+B,QAA/B,CAAR;AAEH,KAHD,MAII;AACHC,MAAAA,KAAK,CAAC;AACFQ,QAAAA,KADE;AAEFC,QAAAA;AAFE,OAAD,CAAL;AAIA;AAGJ,GAdD;;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACW;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADX,CADJ,eAII;AAAM,IAAA,QAAQ,EAAEM,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAiC,IAAA,KAAK,EAAEP,KAAxC;AAA+C,IAAA,QAAQ,EAAEE,QAAzD;AAAmE,IAAA,QAAQ,MAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAHJ,eAOI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,KAAK,EAAED,QAA9C;AAAwD,IAAA,QAAQ,EAAEC,QAAlE;AAA4E,IAAA,QAAQ,MAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAPJ,eAYI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,OAA3B;AAAmC,IAAA,SAAS,EAAC,2BAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CAJJ,CADJ;AAuBH,CArED;;AAyEA,eAAef,KAAf","sourcesContent":["import React,{useState,useContext,useEffect} from 'react';\r\nimport AlertContext from '../../context/alert/alertContext';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\n\r\n\r\n\r\n//usestate is a hook\r\n//in this login.js we use jsx format and we use usesate hook the forward the data.\r\n\r\nconst Login=(props)=>{\r\n    const alertContext=useContext(AlertContext);\r\n    const authContext=useContext(AuthContext);\r\n\r\n    const{setAlert}=alertContext;\r\n    const{login,error,clearErrors,isAuthenticated}=authContext;\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        if(isAuthenticated){\r\n            props.history.push('/'); //if the user is registered he will be authenticated home using the jwt......\r\n        }\r\n        if(error==='Invalid Credentials'){\r\n            setAlert(error,'danger');\r\n            clearErrors(); //after sometime the error will get cleared...\r\n        }\r\n     //eslint-disable-next-line\r\n    },[error,isAuthenticated,props.history]);  // we are passing this object.\r\n    \r\n    const[user,setUser]=useState({\r\n    \r\n        email:'',\r\n        password:''\r\n    });\r\n\r\n    const {email,password}=user;\r\n\r\n    const onChange=e=>setUser({...user,[e.target.name]:e.target.value}); //whenever we type in the register form it will change it dynamically..\r\n   \r\n   \r\n    const onSubmit=e=>{\r\n        e.preventDefault();\r\n        if(email ===''|| password ===''){\r\n            setAlert('Please Enter all the fields','danger');\r\n\r\n        }\r\n        else{\r\n         login({\r\n             email,\r\n             password\r\n         });\r\n        }\r\n      \r\n        \r\n    }\r\n    return(\r\n        <div className=\"form-container\">\r\n            <h1>\r\n                Account<span className='text-primary'>Login</span>\r\n            </h1>\r\n            <form onSubmit={onSubmit}>\r\n\r\n               \r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <input type=\"email\" name=\"email\" value={email} onChange={onChange} required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" name=\"password\" value={password} onChange={onChange} required/>\r\n                </div>\r\n               \r\n                <input type=\"submit\" value=\"Login\" className=\"btn btn-primary btn-block\"/>\r\n            </form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}